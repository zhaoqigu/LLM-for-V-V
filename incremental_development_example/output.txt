-- This defines a NuSMV module for M --
MODULE M

   -- This part declares state variables for the given NuSMV module --
   VAR
     state : { Sm_s1 , Sm_s2 , Sm_s3 , Sm_s4 };  -- Four states: s1, s2, s3, and s4
     event : { ev_e , ev_f , ev_g , ev_null };  -- Events: e, f, g, or no event (ev_null)
     x : boolean;  -- Boolean variable x

   -- This part defines macros that summarize the transitions and guards (if any) of the given NuSMV module --
   DEFINE
     sm_stable := !( event = ev_e | event = ev_f | event = ev_g );
     t1 := event = ev_e & state = Sm_s1 & g1;  -- Transition condition for event e in state s1
     t2 := event = ev_f & state = Sm_s2 & g2;  -- Transition condition for event f in state s2
     t3 := event = ev_g & state = Sm_s3 & g2;  -- Transition condition for event g in state s3
     t4 := event = ev_g & state = Sm_s4;  -- Transition condition for event g in state s4
     g1 := x = FALSE;  -- Guard for transitions from s1 (x == false)
     g2 := x = TRUE;   -- Guard for transitions from s2, s3 (x == true)

   -- This part defines logic for the assignment of values to state variable "state" of this NuSMV module --
   ASSIGN
     init( state ) := Sm_s1;  -- Initial state is s1
     next( state ) := case
       t4 : Sm_s1;         -- If event g happens in s4, transition back to s1
       t3 : Sm_s4;         -- If event g happens in s3, transition to s4
       t2 : Sm_s3;         -- If event f happens in s2, transition to s3
       t1 : Sm_s2;         -- If event e happens in s1, transition to s2
       TRUE : state;       -- Stay in the same state otherwise
     esac;

   -- This part defines logic for the assignment of values to state variable "event" of this NuSMV module --
   ASSIGN
     init( event ) := ev_null;  -- Initial event is no event (ev_null)
     next( event ) := case
       sm_stable : { ev_e , ev_f , ev_g };  -- In a stable state, any event can be triggered
       TRUE : ev_null;                      -- Otherwise, no event
     esac;

   -- This part defines logic for the assignment of values to state variable "x" of this NuSMV module --
   ASSIGN
     init( x ) := FALSE;  -- Initial value of x is false
     next( x ) := case
       t1 : x = TRUE;   -- Event e in state s1 makes x true
       t3 : x = TRUE;   -- Event g in state s3 makes x true
       t4 : x = TRUE;   -- Event g in state s4 makes x true
       TRUE : x;        -- Otherwise, x remains the same
     esac;

-- This defines a NuSMV module for M_Machine --
MODULE M_Machine

   -- This part declares state variables for the given NuSMV module --
   VAR
     m : M;

-- This defines a NuSMV module for main --
MODULE main

   -- This part declares state variables for the given NuSMV module --
   VAR
     m_Machine : M_Machine;

   -- The following properties are specified to certify that non-symbolic state(s) of this model is (or are) reachable. 
   CTLSPEC   EF( m_Machine.m.state = Sm_s1 )
   CTLSPEC   EF( m_Machine.m.state = Sm_s2 )
   CTLSPEC   EF( m_Machine.m.state = Sm_s3 )
   CTLSPEC   EF( m_Machine.m.state = Sm_s4 )

   -- This part specifies the AG property for the Test-Suite --
   CTLSPEC   AG( m_Machine.m.state = Sm_s1 & m_Machine.m.x = FALSE & m_Machine.m.event = ev_e -> AX m_Machine.m.state = Sm_s2 )
